<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>michaelpeters</title>
    <link>https://michaelpeters.dev/</link>
    <description>Recent content on michaelpeters</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 22 Dec 2021 20:01:20 -0800</lastBuildDate><atom:link href="https://michaelpeters.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My ZSH Configuration</title>
      <link>https://michaelpeters.dev/posts/my-zsh-configuration/</link>
      <pubDate>Wed, 22 Dec 2021 20:01:20 -0800</pubDate>
      
      <guid>https://michaelpeters.dev/posts/my-zsh-configuration/</guid>
      <description>ZSH! Below you can find the setup that I&amp;rsquo;ve found very comfortable while still maintaining a relatively minimal terminal experience. Confidential environment variables and aliases have been omitted to maintain basic operational security. This post will be edited every time a major revision is made.
Customizations of Note  Plugin Manager: Antibody cat Alternative: bat Theme: lambda-gitster  Current .zshrc Configuration export ZSH=&amp;#34;/Users/michaelpeters/.oh-my-zsh&amp;#34; export PATH=/usr/local/git/bin:$PATH ZSH_THEME=&amp;#34;lambda-gitster&amp;#34; DISABLE_UPDATE_PROMPT=&amp;#34;true&amp;#34; COMPLETION_WAITING_DOTS=&amp;#34;true&amp;#34; DISABLE_UNTRACKED_FILES_DIRTY=&amp;#34;true&amp;#34; source $ZSH/oh-my-zsh.</description>
    </item>
    
    <item>
      <title>Hashes and Strings in Go</title>
      <link>https://michaelpeters.dev/posts/hashes-and-strings/</link>
      <pubDate>Wed, 22 Dec 2021 18:57:31 -0800</pubDate>
      
      <guid>https://michaelpeters.dev/posts/hashes-and-strings/</guid>
      <description>Introduction In a few cases while working on Go software, I have needed to generate a cryptographic hash (mainly SHA-256) from a string or JSON value. In all cases up to this point, I needed to convert the resulting []byte to a string representation for storage or viewing. In my investigation, I found two popular ways to approach this problem. I&amp;rsquo;ll describe them below as well as explore the performance implications of each choice.</description>
    </item>
    
    <item>
      <title>Adventures in IPFS</title>
      <link>https://michaelpeters.dev/posts/adventures-in-ipfs/</link>
      <pubDate>Sat, 11 Dec 2021 00:16:00 -0800</pubDate>
      
      <guid>https://michaelpeters.dev/posts/adventures-in-ipfs/</guid>
      <description>Preface (just a shoutout) Firstly, before digging into the real meat of this post, I&amp;rsquo;d like to thank GuildDarts on GitHub for creating the incredible Docker Folders plugin for Unraid (which greatly helped me clean up my Docker container list). I found this plugin after creating a new IPFS Docker container, which rounded out a cluttered ~30 containers running on my Dell R620. With it, I was able to make a new Web3 category to store my new related containers in.</description>
    </item>
    
    <item>
      <title>LinuxGSM 7DaysToDie Tips</title>
      <link>https://michaelpeters.dev/posts/linuxgsm-7dtd-info/</link>
      <pubDate>Sat, 20 Nov 2021 23:20:59 -0800</pubDate>
      
      <guid>https://michaelpeters.dev/posts/linuxgsm-7dtd-info/</guid>
      <description>Issue This evening, I was struggling to access my new &amp;ldquo;7 Days To Die&amp;rdquo; server after provisioning a new Rocky Linux 8 VM to host it on. As a preface, I have plenty of experience hosting both bare-metal and VM game servers. For Steam games, my tool of choice is typically LinuxGSM by Daniel Gibbs. This is a fabulous piece of software that abstracts some of the nitty-gritty away (which definitely helps when running servers from multiple games).</description>
    </item>
    
    <item>
      <title>Spaces vs. Tabs</title>
      <link>https://michaelpeters.dev/posts/spaces-vs-tabs/</link>
      <pubDate>Sun, 14 Nov 2021 15:44:04 -0800</pubDate>
      
      <guid>https://michaelpeters.dev/posts/spaces-vs-tabs/</guid>
      <description>The Question? Should a software engineer use tabs or spaces when writing code?
The Answer? Use tabs, no really. In your favorite text-editor or IDE, simply set the tab length to 4 spaces.
Why?  Tabs take only one byte, whereas the equivalent (4 spaces) takes four bytes.  Realistically, this doesn&amp;rsquo;t matter nowadays with compression, minification, and large HDD/SSD storage mediums available.   Tabs allow you to set the visual-width to your liking.</description>
    </item>
    
  </channel>
</rss>
